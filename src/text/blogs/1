### Returning to Hacker School (I mean Recurse Center)

Outline

I am back at RC.

My first batch was almost 4 years ago. 

The first day was dramatically different. 

What’s the same? People, culture, 

What’s worse? Check-ins are no longer mandatory



—

Today marks the first day of my second week of six at Recurse Center (nee Hacker School). So far, so good. It's great being back in what is easily the best programming community that I've been a part of, and also one of the most exciting, flexible, open learning environments that I can imagine.

It's been 4 years since I never graduated for the first time. I was an un-student before there was a permanent space, when physical check-ins were required (although I did my best to avoid them), before so many of the current traditions and conventions existed - so it's been fascinating seeing a place that has transformed so much while also remaining very much the same.

What's new? The space is much more differentiated - there are 5 rooms, each with a somewhat different theme - Turing, Lovelace, Church, Babbage, and Hopper. Turing has its own private sub-community of hackers, Lovelace is for pomodoro sessions, Church is the quiet room, Babbage is for naps and other relaxing activities, Hopper is for lunch. There is a private closet (Plottin' Closet) for meetings, and another private room with access to the elevator. It's easy to get locked in here. 

There's a board full of lunch recommendations. There's a map of the world that tells you where everyone 

Check-ins are no longer mandatory, although as an old-timer I disagree with this change. Some people do check-outs at the end of the day instead of check-ins. Some people do check-ins at 9am, some at 10:30, some at 1pm. Some people check-in virtually, on the former Slack competitor Zulip, which, since my batch, has been renamed (Humbug, previously), acquired by Dropbox, and un-acquired by Dropbox and open sourced. 

Various useful utilities have been developed by helpful unstudents. An application that allows you to schedule check-ins and sends you an email reminder. [What other applications exist?]

I applied for a variety of reasons - some personal and professional, some altruistic - generally: "produce and disseminate open source technological information (text and code) that is of general use to the architecture and building community, and thereby help create a better, more sustainable world."



### Student-led activities:

* Experimental check-ins
* Code Dojo (started this summer)
* algorithms on Friday (last rotation)

In general, the students are more empowered to control things.

More events, self-organization, stuff to do, potential distractions.




### Facilitators are different

They rotate more frequently. None of the originals are still in that role, although Zach is apparently in the back working on code.

non-technical people on staff.

* support groups. I’m publishing this blog post today because Rose Ames made me set a deadline.



* Thursday presentations
* Tuesday non-technical presentations




SICP group happens every time. Still giving advice to write a bit torrent client. 





### Physical space:

More spread out in terms of focus now - more space to work. 

* storage cubbies
* well-stocked kitchen
* gifts: ceci n'est pas une ecole; hacker school 

Accumulation of stuff.

Turing is for crap. hardware, art supplies. 

The library is fucking stacked.


More amenities: microwave, tea bags, ...

hot plate. camping stove. Our sink was in the bathroom. 

Accumulating stuff. So much more stuff. Lots of supplies, equipment.


elevator room: one-on-one or small group meetings; phone calls; delivery calls? 



Hard to get rid of stuff.



* the octopus


Tools:

* Wiki? 
* blaggregator

There are a lot more tools. It’s a little overwhelming, trying to understand how to use everything, and that’s despite the fact that I’ve been here quite a bit.


### Overlapping batches

 cultural difference of having overlapping batches; allows knowledge transfer. 

Overlapping batches. Benefits to overlapping batches. Big strength because we don't have to rebuild the culture of RC every time. We don't get to rebuild the culture of RC over time. 



### Institutions

No change to the social rules. No guests.


Poker night

Game night



Fewer residents. Budget? Operational.

Closet used to be full of junk.

Coat rack.

Lettering for the rooms

More people use vim. Definitely more people writing in Haskell.


### Activities

Meditation.


Somewhat challenging to get started.



1. Physical
2. Cultural
2a. Ethos; Character
2b. Institutions
3. Tools; accumulate virtually; 

It's good for things to be able to disappear.


Stuff accumulates.

The responsibility to start things as a student. Community-driven.

Code dojo? 1 year. 


### People

Interested in programming better, nice, self-directed, smart.



Data fridays


Zulip, presentations.recurse.com, checkins, booker, 


Safety vs. comfort.


Niceties are nice messages of encouragement for outgoing RCers to help them stay strong.
